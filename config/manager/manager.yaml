apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app: manager
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
    app: manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
      app: manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        app: manager
    spec:
      volumes:
        - name: bmc-operator-config-vol
          projected:
            sources:
            - configMap:
                name: bmc-operator-config
        - name: operator-log
          persistentVolumeClaim:
            claimName: operator-log-claim
      securityContext:
        runAsNonRoot: true
      containers:
      - command:
        - ./start_bmc_operator.sh
        args:
        - --leader-elect
        image: controller:latest
        volumeMounts:
        - name: bmc-operator-config-vol
          mountPath: /etc/bmc-operator-config
        - name: operator-log
          mountPath: /var/log/operator_logs
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
        env:
          - name: HOST_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        ports:
          - containerPort: 45000
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10